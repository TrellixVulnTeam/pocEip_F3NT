{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelzeitoun/Dev/EIP/poc/flylens/client/src/components/FieldCard.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FieldCard = _ref => {\n  let {\n    field\n  } = _ref;\n\n  function arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n\n    return window.btoa(binary);\n  }\n\n  console.log(arrayBufferToBase64(field.png));\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    class: \"field_card\",\n    children: [field.green, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this), field.yellow, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 27\n    }, this), field.sizex, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }, this), field.sizey, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 26\n    }, this), field.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/jpeg;base64,${field.png}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, field._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FieldCard;\nexport default FieldCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FieldCard\");","map":{"version":3,"sources":["/Users/raphaelzeitoun/Dev/EIP/poc/flylens/client/src/components/FieldCard.js"],"names":["React","useSelector","FieldCard","field","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","console","log","png","green","yellow","sizex","sizey","name","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,SAAS,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;;AAE7B,WAASC,mBAAT,CAA8BC,MAA9B,EAAuC;AACnC,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,KAAK,GAAG,IAAIC,UAAJ,CAAgBH,MAAhB,CAAZ;AACA,QAAII,GAAG,GAAGF,KAAK,CAACG,UAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1BL,MAAAA,MAAM,IAAIM,MAAM,CAACC,YAAP,CAAqBN,KAAK,CAAEI,CAAF,CAA1B,CAAV;AACH;;AACD,WAAOG,MAAM,CAACC,IAAP,CAAaT,MAAb,CAAP;AAEH;;AAEDU,EAAAA,OAAO,CAACC,GAAR,CAAYb,mBAAmB,CAACD,KAAK,CAACe,GAAP,CAA/B;AACA,sBACI;AAAI,IAAA,KAAK,EAAC,YAAV;AAAA,eACKf,KAAK,CAACgB,KADX,oBACkB;AAAA;AAAA;AAAA;AAAA,YADlB,EAEKhB,KAAK,CAACiB,MAFX,eAEkB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGKjB,KAAK,CAACkB,KAHX,eAGiB;AAAA;AAAA;AAAA;AAAA,YAHjB,EAIKlB,KAAK,CAACmB,KAJX,eAIiB;AAAA;AAAA;AAAA;AAAA,YAJjB,EAKKnB,KAAK,CAACoB,IALX,eAKgB;AAAA;AAAA;AAAA;AAAA,YALhB,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAK,MAAA,GAAG,EAAG,0BAAyBpB,KAAK,CAACe,GAAI;AAA9C;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,KAA4Bf,KAAK,CAACqB,GAAlC;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA1BD;;KAAMtB,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst FieldCard = ({ field }) => {\n\n    function arrayBufferToBase64( buffer ) {\n        var binary = '';\n        var bytes = new Uint8Array( buffer );\n        var len = bytes.byteLength;\n        for (var i = 0; i < len; i++) {\n            binary += String.fromCharCode( bytes[ i ] );\n        }\n        return window.btoa( binary );\n\n    }\n\n    console.log(arrayBufferToBase64(field.png));\n    return (\n        <li class=\"field_card\" key={field._id}>\n            {field.green} <br/>\n            {field.yellow}<br/>\n            {field.sizex}<br/>\n            {field.sizey}<br/>\n            {field.name}<br/>\n            <br/>\n            <br/>\n            <img src={`data:image/jpeg;base64,${field.png}`} />\n        </li>\n    );\n};\n\nexport default FieldCard;"]},"metadata":{},"sourceType":"module"}